# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import student_pb2 as student__pb2


class HTTTSVStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.login = channel.unary_unary(
        '/lab9.HTTTSV/login',
        request_serializer=student__pb2.Request.SerializeToString,
        response_deserializer=student__pb2.Response.FromString,
        )
    self.view_profile = channel.unary_unary(
        '/lab9.HTTTSV/view_profile',
        request_serializer=student__pb2.Request.SerializeToString,
        response_deserializer=student__pb2.Response.FromString,
        )


class HTTTSVServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def login(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def view_profile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HTTTSVServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'login': grpc.unary_unary_rpc_method_handler(
          servicer.login,
          request_deserializer=student__pb2.Request.FromString,
          response_serializer=student__pb2.Response.SerializeToString,
      ),
      'view_profile': grpc.unary_unary_rpc_method_handler(
          servicer.view_profile,
          request_deserializer=student__pb2.Request.FromString,
          response_serializer=student__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'lab9.HTTTSV', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
